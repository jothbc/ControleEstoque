/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.SupermercadoCorreia.Estoque.Forms;

import EstoqueFrms.Menu;
import br.SupermercadoCorreia.Estoque.Bean.Product;
import br.SupermercadoCorreia.Estoque.DAO.ProductDAO;
import br.SupermercadoCorreia.Estoque.JDialogs.CodeMovJD;
import br.SupermercadoCorreia.Estoque.JDialogs.RefreshProducts_JD;
import br.SupermercadoCorreia.Estoque.JDialogs.SelectTypeUse_JD;
import br.SupermercadoCorreia.Estoque.JDialogs.setAmountInPOC;
import com.sun.glass.events.KeyEvent;
import funcoes.Util;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class PointOfControl extends javax.swing.JFrame {

    DefaultTableModel tb;
    double qtd;

    /**
     * Creates new form PointOfControl
     */
    public PointOfControl() {
        initComponents();
        this.setExtendedState(PointOfControl.MAXIMIZED_BOTH);
        tb = (DefaultTableModel) jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        desctxt = new javax.swing.JLabel();
        codetxt = new javax.swing.JTextField();
        lbl_status = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        atualizaProdutosBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Venda", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(150);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(2).setMinWidth(100);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(3).setMinWidth(100);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Código");

        desctxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        desctxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        desctxt.setText("Descrição");

        codetxt.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        codetxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        codetxt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        codetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codetxtKeyPressed(evt);
            }
        });

        lbl_status.setText("Pronto");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Finalizar F5");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        atualizaProdutosBtn.setBackground(new java.awt.Color(255, 255, 255));
        atualizaProdutosBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        atualizaProdutosBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/1x/square-download.png"))); // NOI18N
        atualizaProdutosBtn.setText("Atualizar Produtos");
        atualizaProdutosBtn.setBorder(null);
        atualizaProdutosBtn.setEnabled(false);
        atualizaProdutosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaProdutosBtnActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Quantidade +");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Buscar Cupom");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(codetxt))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(atualizaProdutosBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(lbl_status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(desctxt, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(codetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(atualizaProdutosBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 18, Short.MAX_VALUE))
                                    .addComponent(desctxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codetxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codetxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            incluirNaTabela();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ADD) {
            setarQuantidade(jTable1.getSelectedRow());
        }
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            finalizar();
        }
    }//GEN-LAST:event_codetxtKeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2) {
            setarQuantidade(jTable1.getSelectedRow());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            removerLinha();
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        finalizar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void atualizaProdutosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaProdutosBtnActionPerformed
        refreshProduct();
    }//GEN-LAST:event_atualizaProdutosBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jTable1.getSelectedRow() >= 0) {
            setarQuantidade(jTable1.getSelectedRow());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        CodeMovJD jd = new CodeMovJD(null, true);
        jd.setVisible(true);
        if (!jd.getProducts().isEmpty()) {
            for (Product p : jd.getProducts()) {
                for (Product pp : Menu.products) {
                    if (p.getCode().equals(pp.getCode())) {
                        tb.addRow(new Object[]{pp.getCode(), pp.getDescription(), pp.getSale_value(), p.getAmount()});
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PointOfControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PointOfControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PointOfControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PointOfControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PointOfControl().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizaProdutosBtn;
    private javax.swing.JTextField codetxt;
    private javax.swing.JLabel desctxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbl_status;
    // End of variables declaration//GEN-END:variables

    private void setarQuantidade(int index) {
        setAmountInPOC jd = new setAmountInPOC(this, true);
        jd.setVisible(true);
        if (jd.getAmount() > 500) {
            JOptionPane.showMessageDialog(null, "A quantidade informada deve estar errada: " + jd.getAmount());
            return;
        }
        if (jd.getAmount() != -1) {
            jTable1.setValueAt(jd.getAmount(), index, 3);
            codetxt.setText("");
            codetxt.requestFocus();
        }
    }

    private void incluirNaTabela() {
        if (!numerico(codetxt.getText())) {
            buscar(codetxt.getText());
        } else {
            if (!verificarCodigoBalanca(codetxt.getText())) {
                qtd = 1;
            }
            codetxt.setText(Long.toString(Long.parseLong(codetxt.getText())));
            boolean add = false;
            for (Product p : Menu.products) {
                if (p.getCode().equals(codetxt.getText())) {
                    tb.addRow(new Object[]{p.getCode(), p.getDescription(), p.getSale_value(), qtd});
                    desctxt.setText(p.getDescription());
                    add = true;
                }
            }
            if (!add) {
                int op = JOptionPane.showOptionDialog(null, "Produto não encontrado.\nTem certeza que o código esta correto?\nCaso a opção for SIM a busca sera atualizada.", "Código não encontrado", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                if (op == JOptionPane.YES_OPTION) {
                    searchProductOnFirebird(codetxt.getText());
                    incluirNaTabela();
                    return;
                }
            }

            if (jTable1.getRowCount() > 0) {
                Util.scroollAutoEnd(jTable1);
            }
            codetxt.setText("");
            codetxt.requestFocus();
        }
    }

    private boolean verificarCodigoBalanca(String cd) {
        if (cd.charAt(0) == '2' && cd.length() == 13) {
            String cd_, valor_;
            cd_ = cd.substring(4, 7);
            valor_ = cd.substring(7);
            codetxt.setText(Long.toString(Long.parseLong(cd_)));
            double valor = Double.parseDouble(valor_) / 1000.00;
            for (Product p : Menu.products) {
                if (p.getCode().equals(codetxt.getText())) {
                    this.qtd = (double) valor / p.getSale_value();
                    System.out.println(p.getSale_value());
                    break;
                }
            }
            return true;
        }
        return false;
    }

    private void removerLinha() {
        if (jTable1.getSelectedRow() < 0) {
            return;
        }
        tb.removeRow(jTable1.getSelectedRow());
    }

    private void finalizar() {
        new Thread(() -> {
            SelectTypeUse_JD jd = new SelectTypeUse_JD(this, true);
            jd.setVisible(true);
            if (jd.getColumn() == null) {
                return;
            }
            String code;
            double amount;
            String column = jd.getColumn();
            String description;
            if (column.equals(ProductDAO.EXCHANGE_TABLE) && new ProductDAO().refresh_is_needed(ProductDAO.HOUR_MILES)) {
                lbl_status.setBackground(Color.GREEN);
                lbl_status.setText("Obtendo Fornecedor");
                Menu.products = new ProductDAO().getAllFB_Provider(Menu.products, new JProgressBar());
                lbl_status.setText("Pronto");
                lbl_status.setBackground(Color.WHITE);
                new ProductDAO().refreshed_now();
            }
            List<String> exchange_list = new ArrayList<>();
            while (jTable1.getRowCount() > 0) {
                code = (String) jTable1.getValueAt(0, 0);
                description = (String) jTable1.getValueAt(0, 1);
                amount = (double) jTable1.getValueAt(0, 3);
                if (new ProductDAO().already(code)) {
                    if (!new ProductDAO().update_type_use(code, amount, column)) {
                        JOptionPane.showMessageDialog(null, "Erro ao tentar fazer update no banco de dados.", "ERRO", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                } else {
                    if (!new ProductDAO().insert_type_use(code, description, amount, column)) {
                        JOptionPane.showMessageDialog(null, "Erro ao tentar fazer insert no banco de dados.", "ERRO", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                if (column.equals(ProductDAO.EXCHANGE_TABLE)) {
                    exchange_list.add(code);
                }
                new ProductDAO().insert_log_type_use(Menu.usuario, code, description, amount, column);
                tb.removeRow(0);
            }
            if (column.equals(ProductDAO.EXCHANGE_TABLE)) {
                String temp = "ULTIMOS FORNECEDORES\n\n";
                for (String s : exchange_list) {
                    for (Product p : Menu.products) {
                        if (p.getCode().equals(s)) {
                            temp += p.getDescription() + "     " + p.getProvider() + "\n";
                            break;
                        }
                    }
                }
                JOptionPane.showMessageDialog(null, temp);
            }

        }
        ).start();
    }

    private boolean numerico(String text) {
        try {
            long test = Long.parseLong(text);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private void buscar(String text) {
        SearchProductJD jd = new SearchProductJD(null, true, text, Menu.products);
        jd.setVisible(true);
        if (jd.getProduct() != null) {
            codetxt.setText(jd.getProduct().getCode());
        } else {
            codetxt.setText("");
        }
    }

    @Deprecated
    private void refreshProduct() {
        new RefreshProducts_JD(null, true).setVisible(true);
        Menu.products = new ProductDAO().findAll();
    }

    private void searchProductOnFirebird(String code) {
        Product prod_search = new ProductDAO().searchProductInFB(code);
        if (prod_search != null) {
            try {
                new ProductDAO().addProduct(prod_search);
                Menu.products = new ProductDAO().findAll();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }
}
